// This is your Prisma schema file,
// learn more about it in the docs https//pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Company {
  id                   String                 @id @default(uuid())
  name                 String
  users                User[]
  Gad                  Gad[]
  User_Program_Session User_Program_Session[]
  Rating               Rating[]
  Isi                  Isi[]
  Phq                  Phq[]
  Productivity         Productivity[]
  Sleep_Diarie         Sleep_Diaries[]
}

model User {
  id                    String                 @id @default(uuid())
  company               Company                @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id            String
  points                Int
  day_goal              Int
  night_goal            Int
  user_program_sessions User_Program_Session[]
  ratings               Rating[]
  isi                   Isi[]
  gad                   Gad[]
  phq                   Phq[]
  productivities        Productivity[]
  sleep_Diaries         Sleep_Diaries[]
}

model User_Program_Session {
  id         String  @id @default(uuid())
  session_id Int     
  state      String
  created_at String
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  company    Company @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id String
}

model Rating {
  id         String  @id @default(uuid())
  label      String
  grade      Int
  created    String
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  company    Company @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id String
}

model Isi {
  id         String  @id @default(uuid())
  q1         Int
  q2         Int
  q3         Int
  q4         Int
  q5         Int
  q6         Int
  q7         Int
  created_at String
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  company    Company @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id String
}

model Gad {
  id         String  @id @default(uuid())
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  company    Company @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id String
  q1         Int
  q2         Int
  created_at String
}

model Phq {
  id         String  @id @default(uuid())
  q1         Int
  q2         Int
  created_at String
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  company    Company @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id String
}

model Productivity {
  id         String  @id @default(uuid())
  q1         Int
  q2         Int
  q3         Int
  q4         Int
  created_at String
  user       User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  company    Company @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id String
}

model Sleep_Diaries {
  id                              String   @id @default(uuid())
  user                            User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id                         String
  company                         Company  @relation(fields: [company_id], references: [id], onDelete: Cascade)
  company_id                      String
  autogenic_training              Boolean?
  behavior_activation             Boolean?
  challenge_catastrophic_thinking Boolean?
  concentration                   Float?
  created_at                      String
  date                            String
  deep_breath                     Boolean?
  energy                          Float?
  get_up                          String
  go_bed                          String
  go_sleep                        String
  grade                           Float?
  gratitude                       Boolean?
  humor                           Float?
  imagery                         Boolean?
  light_therapy                   Boolean?
  meditation                      Boolean?
  paradoxical_intention           Boolean?
  parking_lot                     Boolean?
  pmr                             Boolean?
  relationships                   Float?
  stimulus_control                Boolean?
  thought_block                   Boolean?
  timezone                        Int
  time_to_sleep                   Int
  wake_up                         String
  wake_up_count                   Int
  wake_up_duration                Int
  tag                             Tag[]
}

model Tag {
  id              String @default(uuid())
  sleep_tag       String
  Sleep_Diaries   Sleep_Diaries @relation(fields: [sleep_DiariesId], references: [id], onDelete: Cascade)
  sleep_DiariesId String

  @@id([id, sleep_tag, sleep_DiariesId])
}
